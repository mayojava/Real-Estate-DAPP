// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var verifier = artifacts.require("Verifier");

contract('TestSquareVerifier', accounts => {
    describe('test verification', () => {
        beforeEach(async function () {
            this.contract = await verifier.new({from: accounts[0]});
        })

        it('verification with correct proof', async function () {
            let result = await this.contract.verifyTx.call(
                ["0x2f72cbd7e0852bc92b679bf11259108f0ac787869da19b4bb76e55ef3535c177", "0x0414e7e4095b9d390f7a4bb0a181d621d9c0be5aedb044557c11ba830f52341b"],
                [["0x0c6d3ec9cebdc5fa3e57eabbd8bfe26cea6873c133d8cf835f9c4c14b332979f", "0x1cbb904036e3521a944f147e0dae0b006144f55d6b72863cbea06ef2410cb222"], ["0x1731c80bd00b909f5e3e7539138a2d1ff01a9d31db37b452236bee576f0ecb69", "0x2da55a6f8cea1616cd5c116fa286772812542a6e8d7fe7f2cc485089510e261a"]],
                ["0x258f11e93a47963235db7bbe253aca36fd49401f54cd63dd9f0ad1f4aa0837a0", "0x2e40536ab25b1e8c61b7d79cd39bc06b8cf5530cb00bfd63a44914460ab23645"],
                ["0x000000000000000000000000000000000000000000000000000000000002c4e4", "0x0000000000000000000000000000000000000000000000000000000000000001"]
            );
            assert.equal(result, true, "Verification failed");
        })

        it('verification with incorrect proof', async function () {
            let result = await this.contract.verifyTx.call(
                ["0x2f72cbd7e0852bc92b679bf11259108f0ac787869da19b4bb76e55ef3535c177", "0x0414e7e4095b9d390f7a4bb0a181d621d9c0be5aedb044557c11ba830f52341b"],
                [["0x0c6d3ec9cebdc5fa3e57eabbd8bfe26cea6873c133d8cf835f9c4c14b332979f", "0x1cbb904036e3521a944f147e0dae0b006144f55d6b72863cbea06ef2410cb222"], ["0x1731c80bd00b909f5e3e7539138a2d1ff01a9d31db37b452236bee576f0ecb69", "0x2da55a6f8cea1616cd5c116fa286772812542a6e8d7fe7f2cc485089510e261a"]],
                ["0x258f11e93a47963235db7bbe253aca36fd49401f54cd63dd9f0ad1f4aa0837a0", "0x2e40536ab25b1e8c61b7d79cd39bc06b8cf5530cb00bfd63a44914460ab23645"],
                ["0x000000000000000000000000000000000000000000000000000000000002c4e4", "0x0000000000000000000000000000000000000000000000000000000000000007"]
            );
            assert.equal(result, false, "Verification was successful with wrong input");
        })
    });
});

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

    
// Test verification with incorrect proof
